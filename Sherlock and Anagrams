#include <bits/stdc++.h>

using namespace std;

// Complete the sherlockAndAnagrams function below.
int sherlockAndAnagrams(string s) {
    int ans = 0;
    for(int i = 0; i < s.size(); i ++) {
        map<char, int>mpSubstr;
        for(int j = i; j < s.size(); j ++) {
            int count = j - i + 1, first, last;
            first = i + 1;
            mpSubstr[s[j]] ++;
            map<char, int>mpCheck;
            // cout << count << " " << first << endl;
            for(int k = i + 1; k < s.size(); k ++) {
                if(count > 0) {
                    mpCheck[s[k]] ++;
                    count --;
                    if(count == 0 && mpCheck == mpSubstr) ans ++;
                }
                else if(count == 0) {
                    mpCheck[s[first]] --;
                    mpCheck[s[k]] ++;
                    first ++;
                    if(mpCheck == mpSubstr) ans ++;
                }
            }
        }
    }
    return ans;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        int result = sherlockAndAnagrams(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}
